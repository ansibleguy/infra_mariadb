---

- name: MariaDB | Debian | Showing debug info - user provided config
  ansible.builtin.debug:
    var: mariadb
  when:
    - debug is defined
    - debug

- name: MariaDB | Debian | Showing debug info - running config
  ansible.builtin.debug:
    var: MARIADB_CONFIG
  when:
    - debug is defined
    - debug

- name: MariaDB | Debian | Install packages
  ansible.builtin.apt:
    name: "{{ base_packages.debian[ansible_distribution_major_version] | default(base_packages.debian.other, true) }}"
    state: present
  tags: [base]

- name: MariaDB | Debian | Setting swappiness
  ansible.posix.sysctl:
    name: vm.swappiness
    value: '1'
    state: present
  when: configure_swappiness
  tags: [config, base]

- name: MariaDB | Debian | Configuring open file limit
  ansible.posix.sysctl:
    name: 'fs.nr_open'
    value: '1048576'
    state: present
  when: configure_ofl_increase
  tags: [config, base]

- name: MariaDB | Debian | Creating directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: 'root'
    group: 'root'
  loop:
    - "{{ MARIADB_CONFIG.config.path_base }}"
    - '/etc/systemd/system/mariadb@.service.d'

- name: MariaDB | Debian | Creating directories (owned by mysql)
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: 'mysql'
    group: 'mysql'
  loop:
    - "{{ MARIADB_CONFIG.config.path_run }}"
    - "{{ MARIADB_CONFIG.config.path_data }}"
    - "{{ MARIADB_CONFIG.config.path_config }}"
  tags: [config, base]

- name: MariaDB | Debian | Copying port-checker script
  ansible.builtin.copy:
    src: 'files/etc/mysql/check_port.py'
    dest: '/etc/mysql/check_port.py'
    mode: 0755
    owner: 'root'
    group: 'root'

- name: MariaDB | Debian | Configuring default-instance
  ansible.builtin.import_tasks: default_instance.yml
  tags: [config, base]

# without it the custom mariadb instances will fail to start
- name: MariaDB | Debian | Configuring startup-check script
  ansible.builtin.template:
    src: 'templates/etc/mysql/debian-start-instance.sh.j2'
    dest: '/etc/mysql/debian-start-instance.sh'
    mode: 0755
    owner: 'root'
    group: 'root'
  tags: [config, base]

- name: MariaDB | Debian | Configuring mysql instance-service settings
  ansible.builtin.template:
    src: 'templates/etc/systemd/system/mariadb@.service.d/override.conf.j2'
    dest: '/etc/systemd/system/mariadb@.service.d/override.conf'
  vars:
    settings: "{{ MARIADB_CONFIG.service }}"
  tags: [config, base]

- name: MariaDB | Debian | Reloading systemd
  ansible.builtin.systemd:
    daemon_reload: yes
  tags: [config, base]

- name: MariaDB | Debian | Adding mariadb instances
  ansible.builtin.include_tasks: add_instance.yml
  when: instance.state == 'present'
  vars:
    instance: "{{ defaults_instance | combine(instance_item.value, recursive=true) }}"
    backup: "{{ MARIADB_CONFIG.backup | combine(instance_item.value.backup | default({}, true), recursive=true) }}"
    name: "{{ instance_item.key | safe_key }}"
    socket: "{{ MARIADB_CONFIG.config.path_run }}/mysqld_{{ name }}.sock"
    path_data: "{{ MARIADB_CONFIG.config.path_data }}/instance_{{ name }}"
    path_backup: "{{ backup.path }}/instance_{{ name }}"
  loop_control:
    loop_var: instance_item
  with_dict: "{{ MARIADB_CONFIG.instances }}"
  no_log: true
  tags: [instances, backup, config, users, dbs]

- name: MariaDB | Debian | Removing mariadb instances
  ansible.builtin.include_tasks: rm_instance.yml
  when: instance.state != 'present'
  vars:
    instance: "{{ defaults_instance | combine(instance_item.value, recursive=true) }}"
    backup: "{{ MARIADB_CONFIG.backup | combine(instance_item.value.backup | default({}, true), recursive=true) }}"
    name: "{{ instance_item.key | safe_key }}"
    socket: "{{ MARIADB_CONFIG.config.path_run }}/mysqld_{{ name }}.sock"
    path_data: "{{ MARIADB_CONFIG.config.path_data }}/instance_{{ name }}"
    path_backup: "{{ backup.path }}/instance_{{ name }}"
  loop_control:
    loop_var: instance_item
  with_dict: "{{ MARIADB_CONFIG.instances }}"
  no_log: true
  tags: [instances, backup, config, users, dbs]
